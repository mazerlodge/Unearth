S1 Use Cases - Unearth

Goal - Define use cases for incremental development of the Unearth project.

> Scratch Examples
	. S1. Next available number 

> Tests (via -action dotest) 
	. T3. Generate shuffled decks, output them.

> Unit tests
	. U2. Fully populate UGE from UGF via dictionary passed into UGE.populateGameFromDictionary().

> Functionality 
	. F0. CLI high level interaction flow 
			Start game, enter player info, exercise show commands (see F1), quit 

	. F1. Interacting with the game through CLI.
		Hex map, enter an ID into CLI, show details (e.g. 'show cell 34') 
		Other commands; show {map |  delvers (always held) |  dice (held & on board) 
								|  ruins (held & on board?) |  wonders (held & on board?) }

> Enhancements
	. E1. Enhance ArgParser to support case insensitive args (see TODO marker).
	. E2. Enhance ArgParser.addArgsFromString(), Add check for arg (and assoc val) already in array.
	. E3. Refactor away references to HexCell row and column, use position object instead. 0216

> Documentation
	. D1. Update Object Libary.txt with current as built information.
	. D2. Create additional Use Cases (help drive class method definition)


> Completed items archive 
---------------------------
	x S0. Start the game engine with a '-test 1' parameter that generates required 
			params to do a simple "power on" sequence.
			Status: Done. 
			Use startup arg "-action defaultstart", reads QConfig.plist for entry "DefaultStartParams"

	x T1. Generate unshuffled decks, output them.
			Status: Done.
			Run with test ID = 13. 

	x T2. Collect all player questions, stores in player, outputs answers.
			Status: Done. 
			Run with test ID = 11. 

	x T4. Populate a player map with a lesser wonder surrounded with mix of colors.
			Status: Done. 
			Run with test ID = 12. 

	x U1. (renamed to T4).			

	x U3. Wrap stone bag array in a class with pull method that depletes bag. 
			Status: Done
			Stone bag is a class that includes a getNextStone() method. 
